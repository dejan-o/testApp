{"version":3,"sources":["components/search-box/SearchBox.js","components/cardItem/Card.js","components/card-list/CardList.js","components/pagination/PaginationControled.js","apiKey.js","App.js","utils.js","index.js"],"names":["SearchBox","onChange","className","type","placeholder","Card","element","onBookmarkChange","isBookmarked","thumbnail","name","link","path","extension","src","alt","onClick","CardList","characters","isBookmarkedFunction","map","item","i","useStyles","makeStyles","theme","root","marginTop","spacing","PaginationControlled","page","handleChange","count","classes","Typography","Pagination","App","key","defaultValue","serialize","JSON","stringify","deserialize","parse","useState","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","useRef","useEffect","prevKey","current","removeItem","setItem","useLocalStorageState","bookmarked","setBookmarked","searchField","setSearchField","offset","setOffset","setPage","pageNum","setPageNum","setCharacters","trim","fetch","then","result","json","obj","parseInt","data","total","results","catch","e","length","getData","bookmarkedRender","slice","event","target","value","filter","id","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ab90368.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SearchBox.scss'\r\n\r\nexport const SearchBox = ( { onChange } ) =>{\r\n    return (\r\n        <input \r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder=\"search characters\"\r\n        onChange = {onChange}\r\n        />\r\n    );\r\n} \r\n\r\nexport default SearchBox;","import React from 'react'\r\nimport './Card.scss'\r\n\r\nconst Card = ( { element, onBookmarkChange, isBookmarked } ) => {\r\n    const {thumbnail, name} = element;\r\n   \r\n    const link = thumbnail.path + '.' + thumbnail.extension;\r\n    return (\r\n        <figure className=\"card\">\r\n        <div className=\"card__img\">\r\n            <img src={link} alt=\"img\"></img>\r\n        </div>\r\n        <figcaption className=\"card__name\">{name}</figcaption>\r\n        <button className={`card__bookmark ${isBookmarked ? 'bookmarked' : null}`} onClick={() => onBookmarkChange(isBookmarked, element)}>bookmark</button>\r\n        </figure>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './CardList.scss';\r\nimport Card from '../cardItem/Card';\r\n\r\nconst CardList = ( { characters, onBookmarkChange, isBookmarkedFunction } ) => {\r\n \r\n    \r\n\r\n  \r\n\r\n\r\n    return (\r\n        <div className=\"cardList\">\r\n        {\r\n            characters.map( (item,i) => {\r\n                const isBookmarked = isBookmarkedFunction(item);\r\n                return <Card key={i} element={item} isBookmarked={isBookmarked} onBookmarkChange={onBookmarkChange}/>\r\n            })\r\n        }  \r\n        </div>\r\n    );\r\n} \r\n\r\nexport default CardList;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport './Pagination.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PaginationControlled({ page, handleChange, count}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography>Page: {page}</Typography>\r\n      <Pagination count={count} page={page} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\n","export const apiKey = 'fca86e3537b62c5378f812c07e1786fa';","import React,{ useState, useEffect } from 'react';\nimport './App.scss';\nimport { useLocalStorageState } from './utils';\nimport SearchBox from './components/search-box/SearchBox';\nimport CardList from './components/card-list/CardList';\nimport PaginationControled from './components/pagination/PaginationControled';\nimport { apiKey } from './apiKey';\n\n\nconst App = () => {\n\n \n\n  const [ bookmarked, setBookmarked ] = useLocalStorageState('marvel_characters'); \n  const [ searchField, setSearchField ] = useState('');\n  const [ offset, setOffset ] = useState(0);\n  const [ page, setPage ] = useState(1);\n  const [ pageNum, setPageNum ] = useState(0);\n  const [ characters, setCharacters ] = useState([]);\n\n  function getData(){\n    const name = searchField.trim();\n    if(name){\n        setOffset((page-1) * 20);\n        fetch(`https://gateway.marvel.com:443/v1/public/characters?apikey=${apiKey}&nameStartsWith=${name}&limit=20&offset=${offset}`).\n        then( result => result.json()).\n        then( obj => {\n            setPageNum(parseInt(obj.data.total / 20));\n            setCharacters(obj.data.results);\n        }\n        ).catch( e => {\n          setCharacters([])\n        })\n      }\n    else{\n      setPageNum(parseInt(bookmarked.length / 20));\n    }\n  }\n\n  useEffect( () => {\n    getData();\n      },[searchField, page]);\n\n      \n\n  const onSearchChange = (event) => {\n    setPage(1);\n    setSearchField(event.target.value);\n  }\n\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const onBookmarkChange = (isBookmarked, element) => {\n    if(!isBookmarked){\n      setBookmarked([...bookmarked, element]);\n    }\n    else{\n      setBookmarked(bookmarked.filter( item => element.id !== item.id))\n    }\n    }\n  \n    const checkIsBookmarked = (element) => {\n      return bookmarked.some( item => item.id === element.id);\n    }\n\n    const bookmarkedRender = bookmarked.slice((page-1) * 20, (page-1)*20 + 20);\n  return (\n    <div className=\"app\">\n      <header className=\"main-header\">\n        <h1 className=\"main-header__title\">MARVEL CHARACTERS</h1>\n      </header>\n    <SearchBox onChange={onSearchChange} />\n    <CardList characters={searchField ? characters : bookmarkedRender } onBookmarkChange={onBookmarkChange} isBookmarkedFunction={checkIsBookmarked}/>\n    {pageNum ?\n    <PaginationControled handleChange={handlePageChange} page={page} count={pageNum}/>\n    :\n    null\n    }\n    </div>\n  )\n}\n\nexport default App;","import { useState, useRef, useEffect } from 'react';\r\n\r\nexport function useLocalStorageState(key, defaultValue = [], { serialize = JSON.stringify, deserialize = JSON.parse } = {} ) {\r\n\r\n    const [ state, setState ] = useState( () => {\r\n        const valueInLocalStorage = window.localStorage.getItem(key);\r\n        if(valueInLocalStorage)\r\n            return deserialize(valueInLocalStorage)\r\n        return typeof defaultValue === 'function' ? defaultValue() : defaultValue;   \r\n        })\r\n \r\n    const prevKeyRef = useRef(key);\r\n\r\n    useEffect( () => {\r\n    const prevKey = prevKeyRef.current;\r\n    if(prevKey !== key){\r\n        window.localStorage.removeItem(prevKey);\r\n    }\r\n    prevKeyRef.current = key;\r\n\r\n    window.localStorage.setItem(key, serialize(state));\r\n    }, [ state, serialize, key]);\r\n\r\n    return [ state, setState ];\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}